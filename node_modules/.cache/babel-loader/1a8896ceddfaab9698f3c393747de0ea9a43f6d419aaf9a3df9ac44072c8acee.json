{"ast":null,"code":"import _objectSpread from\"C:/Users/de3pp/OneDrive/Desktop/23CE097/hackout/HACKOUT/HACKOUT/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,isAuthenticated:false,isLoading:false,error:null};function authReducer(state,action){switch(action.type){case'LOGIN_START':return _objectSpread(_objectSpread({},state),{},{isLoading:true,error:null});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload,isAuthenticated:true,isLoading:false,error:null});case'LOGIN_FAILURE':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:action.payload});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,isLoading:false,error:null});case'CLEAR_ERROR':return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}}const AuthContext=/*#__PURE__*/createContext(undefined);export function AuthProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);const login=async(email,password)=>{dispatch({type:'LOGIN_START'});try{// Simulate API call - replace with actual authentication\nawait new Promise(resolve=>setTimeout(resolve,1000));// Mock user data based on email\nlet role='researcher';let organization='Independent Researcher';if(email.includes('enterprise')||email.includes('company')){role='investor';organization='Enterprise Company';}else if(email.includes('policy')||email.includes('gov')){role='policyAnalyst';organization='Government Agency';}else if(email.includes('plan')||email.includes('consult')){role='planner';organization='Planning Consultancy';}const user={id:'1',name:email.split('@')[0],email,role,organization,avatar:\"https://ui-avatars.com/api/?name=\".concat(email.split('@')[0],\"&background=0ea5e9&color=fff\")};dispatch({type:'LOGIN_SUCCESS',payload:user});}catch(error){dispatch({type:'LOGIN_FAILURE',payload:'Invalid credentials'});}};const logout=()=>{dispatch({type:'LOGOUT'});};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state,login,logout,clearError},children:children});}export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","login","email","password","Promise","resolve","setTimeout","role","organization","includes","id","name","split","avatar","concat","logout","clearError","Provider","value","useAuth","context","Error"],"sources":["C:/Users/de3pp/OneDrive/Desktop/23CE097/hackout/HACKOUT/HACKOUT/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\n\r\nexport type UserRole = 'planner' | 'investor' | 'policyAnalyst' | 'researcher';\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: UserRole;\r\n  organization: string;\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype AuthAction =\r\n  | { type: 'LOGIN_START' }\r\n  | { type: 'LOGIN_SUCCESS'; payload: User }\r\n  | { type: 'LOGIN_FAILURE'; payload: string }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'CLEAR_ERROR' };\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface AuthContextType {\r\n  state: AuthState;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      // Simulate API call - replace with actual authentication\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock user data based on email\r\n      let role: UserRole = 'researcher';\r\n      let organization = 'Independent Researcher';\r\n      \r\n      if (email.includes('enterprise') || email.includes('company')) {\r\n        role = 'investor';\r\n        organization = 'Enterprise Company';\r\n      } else if (email.includes('policy') || email.includes('gov')) {\r\n        role = 'policyAnalyst';\r\n        organization = 'Government Agency';\r\n      } else if (email.includes('plan') || email.includes('consult')) {\r\n        role = 'planner';\r\n        organization = 'Planning Consultancy';\r\n      }\r\n      \r\n      const user: User = {\r\n        id: '1',\r\n        name: email.split('@')[0],\r\n        email,\r\n        role,\r\n        organization,\r\n        avatar: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=0ea5e9&color=fff`,\r\n      };\r\n      \r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: user });\r\n    } catch (error) {\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: 'Invalid credentials' });\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ state, login, logout, clearError }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"oJAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBA2BhF,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,IAAI,CAAE,IAAI,CACVC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAED,QAAS,CAAAC,WAAWA,CAACC,KAAgB,CAAEC,MAAkB,CAAa,CACpE,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,aAAa,CAChB,OAAAC,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRH,SAAS,CAAE,IAAI,CACfC,KAAK,CAAE,IAAI,GAEf,IAAK,eAAe,CAClB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRL,IAAI,CAAEM,MAAM,CAACG,OAAO,CACpBR,eAAe,CAAE,IAAI,CACrBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IAAI,GAEf,IAAK,eAAe,CAClB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRL,IAAI,CAAE,IAAI,CACVC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAEG,MAAM,CAACG,OAAO,GAEzB,IAAK,QAAQ,CACX,OAAAD,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRL,IAAI,CAAE,IAAI,CACVC,eAAe,CAAE,KAAK,CACtBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IAAI,GAEf,IAAK,aAAa,CAChB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRF,KAAK,CAAE,IAAI,GAEf,QACE,MAAO,CAAAE,KAAK,CAChB,CACF,CASA,KAAM,CAAAK,WAAW,cAAGhB,aAAa,CAA8BiB,SAAS,CAAC,CAEzE,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CAChE,KAAM,CAACR,KAAK,CAAEU,QAAQ,CAAC,CAAGnB,UAAU,CAACQ,WAAW,CAAEL,YAAY,CAAC,CAE/D,KAAM,CAAAiB,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACvDH,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAc,CAAC,CAAC,CAEjC,GAAI,CACF;AACA,KAAM,IAAI,CAAAY,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvD;AACA,GAAI,CAAAE,IAAc,CAAG,YAAY,CACjC,GAAI,CAAAC,YAAY,CAAG,wBAAwB,CAE3C,GAAIN,KAAK,CAACO,QAAQ,CAAC,YAAY,CAAC,EAAIP,KAAK,CAACO,QAAQ,CAAC,SAAS,CAAC,CAAE,CAC7DF,IAAI,CAAG,UAAU,CACjBC,YAAY,CAAG,oBAAoB,CACrC,CAAC,IAAM,IAAIN,KAAK,CAACO,QAAQ,CAAC,QAAQ,CAAC,EAAIP,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC,CAAE,CAC5DF,IAAI,CAAG,eAAe,CACtBC,YAAY,CAAG,mBAAmB,CACpC,CAAC,IAAM,IAAIN,KAAK,CAACO,QAAQ,CAAC,MAAM,CAAC,EAAIP,KAAK,CAACO,QAAQ,CAAC,SAAS,CAAC,CAAE,CAC9DF,IAAI,CAAG,SAAS,CAChBC,YAAY,CAAG,sBAAsB,CACvC,CAEA,KAAM,CAAAvB,IAAU,CAAG,CACjByB,EAAE,CAAE,GAAG,CACPC,IAAI,CAAET,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzBV,KAAK,CACLK,IAAI,CACJC,YAAY,CACZK,MAAM,qCAAAC,MAAA,CAAsCZ,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gCACjE,CAAC,CAEDZ,QAAQ,CAAC,CAAER,IAAI,CAAE,eAAe,CAAEE,OAAO,CAAET,IAAK,CAAC,CAAC,CACpD,CAAE,MAAOG,KAAK,CAAE,CACdY,QAAQ,CAAC,CAAER,IAAI,CAAE,eAAe,CAAEE,OAAO,CAAE,qBAAsB,CAAC,CAAC,CACrE,CACF,CAAC,CAED,KAAM,CAAAqB,MAAM,CAAGA,CAAA,GAAM,CACnBf,QAAQ,CAAC,CAAER,IAAI,CAAE,QAAS,CAAC,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAwB,UAAU,CAAGA,CAAA,GAAM,CACvBhB,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAc,CAAC,CAAC,CACnC,CAAC,CAED,mBACET,IAAA,CAACY,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAE5B,KAAK,CAAEW,KAAK,CAAEc,MAAM,CAAEC,UAAW,CAAE,CAAAjB,QAAA,CAC/DA,QAAQ,CACW,CAAC,CAE3B,CAEA,MAAO,SAAS,CAAAoB,OAAOA,CAAA,CAAG,CACxB,KAAM,CAAAC,OAAO,CAAGxC,UAAU,CAACe,WAAW,CAAC,CACvC,GAAIyB,OAAO,GAAKxB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAyB,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}