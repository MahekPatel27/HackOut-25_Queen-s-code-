{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\de3pp\\\\OneDrive\\\\Desktop\\\\23CE097\\\\hackout\\\\HACKOUT\\\\HACKOUT\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: {\n    id: '1',\n    name: 'Demo User',\n    email: 'demo@h2atlas.in',\n    role: 'researcher',\n    organization: 'भारत H2-Atlas Demo'\n  },\n  isAuthenticated: true,\n  isLoading: false,\n  error: null\n};\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      // Simulate API call - replace with actual authentication\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock user data based on email\n      let role = 'researcher';\n      let organization = 'Independent Researcher';\n      if (email.includes('enterprise') || email.includes('company')) {\n        role = 'investor';\n        organization = 'Enterprise Company';\n      } else if (email.includes('policy') || email.includes('gov')) {\n        role = 'policyAnalyst';\n        organization = 'Government Agency';\n      } else if (email.includes('plan') || email.includes('consult')) {\n        role = 'planner';\n        organization = 'Planning Consultancy';\n      }\n      const user = {\n        id: '1',\n        name: email.split('@')[0],\n        email,\n        role,\n        organization,\n        avatar: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=0ea5e9&color=fff`\n      };\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: user\n      });\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: 'Invalid credentials'\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      login,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","user","id","name","email","role","organization","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","login","password","Promise","resolve","setTimeout","includes","split","avatar","logout","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/de3pp/OneDrive/Desktop/23CE097/hackout/HACKOUT/HACKOUT/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\nexport type UserRole = 'planner' | 'investor' | 'policyAnalyst' | 'researcher';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: UserRole;\n  organization: string;\n  avatar?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGIN_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'CLEAR_ERROR' };\n\nconst initialState: AuthState = {\n  user: {\n    id: '1',\n    name: 'Demo User',\n    email: 'demo@h2atlas.in',\n    role: 'researcher' as UserRole,\n    organization: 'भारत H2-Atlas Demo'\n  },\n  isAuthenticated: true,\n  isLoading: false,\n  error: null,\n};\n\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n\ninterface AuthContextType {\n  state: AuthState;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const login = async (email: string, password: string) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      // Simulate API call - replace with actual authentication\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock user data based on email\n      let role: UserRole = 'researcher';\n      let organization = 'Independent Researcher';\n      \n      if (email.includes('enterprise') || email.includes('company')) {\n        role = 'investor';\n        organization = 'Enterprise Company';\n      } else if (email.includes('policy') || email.includes('gov')) {\n        role = 'policyAnalyst';\n        organization = 'Government Agency';\n      } else if (email.includes('plan') || email.includes('consult')) {\n        role = 'planner';\n        organization = 'Planning Consultancy';\n      }\n      \n      const user: User = {\n        id: '1',\n        name: email.split('@')[0],\n        email,\n        role,\n        organization,\n        avatar: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=0ea5e9&color=fff`,\n      };\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: user });\n    } catch (error) {\n      dispatch({ type: 'LOGIN_FAILURE', payload: 'Invalid credentials' });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, login, logout, clearError }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}